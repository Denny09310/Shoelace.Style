/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@shoelace-style/shoelace@2.17.1/cdn/chunks/chunk.F3MKP6AV.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{SlTag}from"./chunk.T3DUE4D6.js";import{select_styles_default}from"./chunk.2GVQUHGD.js";import{o}from"./chunk.EPJHAO2T.js";import{scrollIntoView}from"./chunk.RWUUFNUL.js";import{defaultValue}from"./chunk.RQ7JZ4R7.js";import{form_control_styles_default}from"./chunk.2VV6AF6A.js";import{SlPopup}from"./chunk.DV4MWNJ3.js";import{FormControlController}from"./chunk.37HAGFEA.js";import{getAnimation,setDefaultAnimation}from"./chunk.EJDHS3MU.js";import{waitForEvent}from"./chunk.B4BZKR24.js";import{animateTo,stopAnimations}from"./chunk.RV6ECJES.js";import{HasSlotController}from"./chunk.NYIIDP5N.js";import{LocalizeController}from"./chunk.NH3SRVOC.js";import{e}from"./chunk.UZVKBFXH.js";import{SlIcon}from"./chunk.Y7EP3V6G.js";import{watch}from"./chunk.SJGTYGCD.js";import{component_styles_default}from"./chunk.K23QWHWK.js";import{ShoelaceElement,e as e2,n,r}from"./chunk.UQRBALDC.js";import{x}from"./chunk.CXZZ2LVK.js";import{__decorateClass}from"./chunk.625AWUY7.js";var SlSelect=class extends ShoelaceElement{constructor(){super(...arguments),this.formControlController=new FormControlController(this,{assumeInteractionOn:["sl-blur","sl-input"]}),this.hasSlotController=new HasSlotController(this,"help-text","label"),this.localize=new LocalizeController(this),this.typeToSelectString="",this.hasFocus=!1,this.displayLabel="",this.selectedOptions=[],this.name="",this.value="",this.defaultValue="",this.size="medium",this.placeholder="",this.multiple=!1,this.maxOptionsVisible=3,this.disabled=!1,this.clearable=!1,this.open=!1,this.hoist=!1,this.filled=!1,this.pill=!1,this.label="",this.placement="bottom",this.helpText="",this.form="",this.required=!1,this.getTag=e=>x`
      <sl-tag
        part="tag"
        exportparts="
              base:tag__base,
              content:tag__content,
              remove-button:tag__remove-button,
              remove-button__base:tag__remove-button__base
            "
        ?pill=${this.pill}
        size=${this.size}
        removable
        @sl-remove=${t=>this.handleTagRemove(t,e)}
      >
        ${e.getTextLabel()}
      </sl-tag>
    `,this.handleDocumentFocusIn=e=>{const t=e.composedPath();this&&!t.includes(this)&&this.hide()},this.handleDocumentKeyDown=e=>{const t=e.target,s=null!==t.closest(".select__clear"),l=null!==t.closest("sl-icon-button");if(!s&&!l){if("Escape"===e.key&&this.open&&!this.closeWatcher&&(e.preventDefault(),e.stopPropagation(),this.hide(),this.displayInput.focus({preventScroll:!0})),"Enter"===e.key||" "===e.key&&""===this.typeToSelectString)return e.preventDefault(),e.stopImmediatePropagation(),this.open?void(this.currentOption&&!this.currentOption.disabled&&(this.multiple?this.toggleOptionSelection(this.currentOption):this.setSelectedOptions(this.currentOption),this.updateComplete.then((()=>{this.emit("sl-input"),this.emit("sl-change")})),this.multiple||(this.hide(),this.displayInput.focus({preventScroll:!0})))):void this.show();if(["ArrowUp","ArrowDown","Home","End"].includes(e.key)){const t=this.getAllOptions(),s=t.indexOf(this.currentOption);let l=Math.max(0,s);if(e.preventDefault(),!this.open&&(this.show(),this.currentOption))return;"ArrowDown"===e.key?(l=s+1,l>t.length-1&&(l=0)):"ArrowUp"===e.key?(l=s-1,l<0&&(l=t.length-1)):"Home"===e.key?l=0:"End"===e.key&&(l=t.length-1),this.setCurrentOption(t[l])}if(1===e.key.length||"Backspace"===e.key){const t=this.getAllOptions();if(e.metaKey||e.ctrlKey||e.altKey)return;if(!this.open){if("Backspace"===e.key)return;this.show()}e.stopPropagation(),e.preventDefault(),clearTimeout(this.typeToSelectTimeout),this.typeToSelectTimeout=window.setTimeout((()=>this.typeToSelectString=""),1e3),"Backspace"===e.key?this.typeToSelectString=this.typeToSelectString.slice(0,-1):this.typeToSelectString+=e.key.toLowerCase();for(const e of t){if(e.getTextLabel().toLowerCase().startsWith(this.typeToSelectString)){this.setCurrentOption(e);break}}}}},this.handleDocumentMouseDown=e=>{const t=e.composedPath();this&&!t.includes(this)&&this.hide()}}get validity(){return this.valueInput.validity}get validationMessage(){return this.valueInput.validationMessage}connectedCallback(){super.connectedCallback(),this.open=!1}addOpenListeners(){var e;document.addEventListener("focusin",this.handleDocumentFocusIn),document.addEventListener("keydown",this.handleDocumentKeyDown),document.addEventListener("mousedown",this.handleDocumentMouseDown),this.getRootNode()!==document&&this.getRootNode().addEventListener("focusin",this.handleDocumentFocusIn),"CloseWatcher"in window&&(null==(e=this.closeWatcher)||e.destroy(),this.closeWatcher=new CloseWatcher,this.closeWatcher.onclose=()=>{this.open&&(this.hide(),this.displayInput.focus({preventScroll:!0}))})}removeOpenListeners(){var e;document.removeEventListener("focusin",this.handleDocumentFocusIn),document.removeEventListener("keydown",this.handleDocumentKeyDown),document.removeEventListener("mousedown",this.handleDocumentMouseDown),this.getRootNode()!==document&&this.getRootNode().removeEventListener("focusin",this.handleDocumentFocusIn),null==(e=this.closeWatcher)||e.destroy()}handleFocus(){this.hasFocus=!0,this.displayInput.setSelectionRange(0,0),this.emit("sl-focus")}handleBlur(){this.hasFocus=!1,this.emit("sl-blur")}handleLabelClick(){this.displayInput.focus()}handleComboboxMouseDown(e){const t=e.composedPath().some((e=>e instanceof Element&&"sl-icon-button"===e.tagName.toLowerCase()));this.disabled||t||(e.preventDefault(),this.displayInput.focus({preventScroll:!0}),this.open=!this.open)}handleComboboxKeyDown(e){"Tab"!==e.key&&(e.stopPropagation(),this.handleDocumentKeyDown(e))}handleClearClick(e){e.stopPropagation(),""!==this.value&&(this.setSelectedOptions([]),this.displayInput.focus({preventScroll:!0}),this.updateComplete.then((()=>{this.emit("sl-clear"),this.emit("sl-input"),this.emit("sl-change")})))}handleClearMouseDown(e){e.stopPropagation(),e.preventDefault()}handleOptionClick(e){const t=e.target.closest("sl-option"),s=this.value;t&&!t.disabled&&(this.multiple?this.toggleOptionSelection(t):this.setSelectedOptions(t),this.updateComplete.then((()=>this.displayInput.focus({preventScroll:!0}))),this.value!==s&&this.updateComplete.then((()=>{this.emit("sl-input"),this.emit("sl-change")})),this.multiple||(this.hide(),this.displayInput.focus({preventScroll:!0})))}handleDefaultSlotChange(){const e=this.getAllOptions(),t=Array.isArray(this.value)?this.value:[this.value],s=[];customElements.get("sl-option")?(e.forEach((e=>s.push(e.value))),this.setSelectedOptions(e.filter((e=>t.includes(e.value))))):customElements.whenDefined("sl-option").then((()=>this.handleDefaultSlotChange()))}handleTagRemove(e,t){e.stopPropagation(),this.disabled||(this.toggleOptionSelection(t,!1),this.updateComplete.then((()=>{this.emit("sl-input"),this.emit("sl-change")})))}getAllOptions(){return[...this.querySelectorAll("sl-option")]}getFirstOption(){return this.querySelector("sl-option")}setCurrentOption(e){this.getAllOptions().forEach((e=>{e.current=!1,e.tabIndex=-1})),e&&(this.currentOption=e,e.current=!0,e.tabIndex=0,e.focus())}setSelectedOptions(e){const t=this.getAllOptions(),s=Array.isArray(e)?e:[e];t.forEach((e=>e.selected=!1)),s.length&&s.forEach((e=>e.selected=!0)),this.selectionChanged()}toggleOptionSelection(e,t){e.selected=!0===t||!1===t?t:!e.selected,this.selectionChanged()}selectionChanged(){var e,t,s,l;this.selectedOptions=this.getAllOptions().filter((e=>e.selected)),this.multiple?(this.value=this.selectedOptions.map((e=>e.value)),this.placeholder&&0===this.value.length?this.displayLabel="":this.displayLabel=this.localize.term("numOptionsSelected",this.selectedOptions.length)):(this.value=null!=(t=null==(e=this.selectedOptions[0])?void 0:e.value)?t:"",this.displayLabel=null!=(l=null==(s=this.selectedOptions[0])?void 0:s.getTextLabel())?l:""),this.updateComplete.then((()=>{this.formControlController.updateValidity()}))}get tags(){return this.selectedOptions.map(((e,t)=>{if(t<this.maxOptionsVisible||this.maxOptionsVisible<=0){const s=this.getTag(e,t);return x`<div @sl-remove=${t=>this.handleTagRemove(t,e)}>
          ${"string"==typeof s?o(s):s}
        </div>`}return t===this.maxOptionsVisible?x`<sl-tag size=${this.size}>+${this.selectedOptions.length-t}</sl-tag>`:x``}))}handleInvalid(e){this.formControlController.setValidity(!1),this.formControlController.emitInvalidEvent(e)}handleDisabledChange(){this.disabled&&(this.open=!1,this.handleOpenChange())}handleValueChange(){const e=this.getAllOptions(),t=Array.isArray(this.value)?this.value:[this.value];this.setSelectedOptions(e.filter((e=>t.includes(e.value))))}async handleOpenChange(){if(this.open&&!this.disabled){this.setCurrentOption(this.selectedOptions[0]||this.getFirstOption()),this.emit("sl-show"),this.addOpenListeners(),await stopAnimations(this),this.listbox.hidden=!1,this.popup.active=!0,requestAnimationFrame((()=>{this.setCurrentOption(this.currentOption)}));const{keyframes:e,options:t}=getAnimation(this,"select.show",{dir:this.localize.dir()});await animateTo(this.popup.popup,e,t),this.currentOption&&scrollIntoView(this.currentOption,this.listbox,"vertical","auto"),this.emit("sl-after-show")}else{this.emit("sl-hide"),this.removeOpenListeners(),await stopAnimations(this);const{keyframes:e,options:t}=getAnimation(this,"select.hide",{dir:this.localize.dir()});await animateTo(this.popup.popup,e,t),this.listbox.hidden=!0,this.popup.active=!1,this.emit("sl-after-hide")}}async show(){if(!this.open&&!this.disabled)return this.open=!0,waitForEvent(this,"sl-after-show");this.open=!1}async hide(){if(this.open&&!this.disabled)return this.open=!1,waitForEvent(this,"sl-after-hide");this.open=!1}checkValidity(){return this.valueInput.checkValidity()}getForm(){return this.formControlController.getForm()}reportValidity(){return this.valueInput.reportValidity()}setCustomValidity(e){this.valueInput.setCustomValidity(e),this.formControlController.updateValidity()}focus(e){this.displayInput.focus(e)}blur(){this.displayInput.blur()}render(){const t=this.hasSlotController.test("label"),s=this.hasSlotController.test("help-text"),l=!!this.label||!!t,o=!!this.helpText||!!s,i=this.clearable&&!this.disabled&&this.value.length>0,a=this.placeholder&&0===this.value.length;return x`
      <div
        part="form-control"
        class=${e({"form-control":!0,"form-control--small":"small"===this.size,"form-control--medium":"medium"===this.size,"form-control--large":"large"===this.size,"form-control--has-label":l,"form-control--has-help-text":o})}
      >
        <label
          id="label"
          part="form-control-label"
          class="form-control__label"
          aria-hidden=${l?"false":"true"}
          @click=${this.handleLabelClick}
        >
          <slot name="label">${this.label}</slot>
        </label>

        <div part="form-control-input" class="form-control-input">
          <sl-popup
            class=${e({select:!0,"select--standard":!0,"select--filled":this.filled,"select--pill":this.pill,"select--open":this.open,"select--disabled":this.disabled,"select--multiple":this.multiple,"select--focused":this.hasFocus,"select--placeholder-visible":a,"select--top":"top"===this.placement,"select--bottom":"bottom"===this.placement,"select--small":"small"===this.size,"select--medium":"medium"===this.size,"select--large":"large"===this.size})}
            placement=${this.placement}
            strategy=${this.hoist?"fixed":"absolute"}
            flip
            shift
            sync="width"
            auto-size="vertical"
            auto-size-padding="10"
          >
            <div
              part="combobox"
              class="select__combobox"
              slot="anchor"
              @keydown=${this.handleComboboxKeyDown}
              @mousedown=${this.handleComboboxMouseDown}
            >
              <slot part="prefix" name="prefix" class="select__prefix"></slot>

              <input
                part="display-input"
                class="select__display-input"
                type="text"
                placeholder=${this.placeholder}
                .disabled=${this.disabled}
                .value=${this.displayLabel}
                autocomplete="off"
                spellcheck="false"
                autocapitalize="off"
                readonly
                aria-controls="listbox"
                aria-expanded=${this.open?"true":"false"}
                aria-haspopup="listbox"
                aria-labelledby="label"
                aria-disabled=${this.disabled?"true":"false"}
                aria-describedby="help-text"
                role="combobox"
                tabindex="0"
                @focus=${this.handleFocus}
                @blur=${this.handleBlur}
              />

              ${this.multiple?x`<div part="tags" class="select__tags">${this.tags}</div>`:""}

              <input
                class="select__value-input"
                type="text"
                ?disabled=${this.disabled}
                ?required=${this.required}
                .value=${Array.isArray(this.value)?this.value.join(", "):this.value}
                tabindex="-1"
                aria-hidden="true"
                @focus=${()=>this.focus()}
                @invalid=${this.handleInvalid}
              />

              ${i?x`
                    <button
                      part="clear-button"
                      class="select__clear"
                      type="button"
                      aria-label=${this.localize.term("clearEntry")}
                      @mousedown=${this.handleClearMouseDown}
                      @click=${this.handleClearClick}
                      tabindex="-1"
                    >
                      <slot name="clear-icon">
                        <sl-icon name="x-circle-fill" library="system"></sl-icon>
                      </slot>
                    </button>
                  `:""}

              <slot name="suffix" part="suffix" class="select__suffix"></slot>

              <slot name="expand-icon" part="expand-icon" class="select__expand-icon">
                <sl-icon library="system" name="chevron-down"></sl-icon>
              </slot>
            </div>

            <div
              id="listbox"
              role="listbox"
              aria-expanded=${this.open?"true":"false"}
              aria-multiselectable=${this.multiple?"true":"false"}
              aria-labelledby="label"
              part="listbox"
              class="select__listbox"
              tabindex="-1"
              @mouseup=${this.handleOptionClick}
              @slotchange=${this.handleDefaultSlotChange}
            >
              <slot></slot>
            </div>
          </sl-popup>
        </div>

        <div
          part="form-control-help-text"
          id="help-text"
          class="form-control__help-text"
          aria-hidden=${o?"false":"true"}
        >
          <slot name="help-text">${this.helpText}</slot>
        </div>
      </div>
    `}};SlSelect.styles=[component_styles_default,form_control_styles_default,select_styles_default],SlSelect.dependencies={"sl-icon":SlIcon,"sl-popup":SlPopup,"sl-tag":SlTag},__decorateClass([e2(".select")],SlSelect.prototype,"popup",2),__decorateClass([e2(".select__combobox")],SlSelect.prototype,"combobox",2),__decorateClass([e2(".select__display-input")],SlSelect.prototype,"displayInput",2),__decorateClass([e2(".select__value-input")],SlSelect.prototype,"valueInput",2),__decorateClass([e2(".select__listbox")],SlSelect.prototype,"listbox",2),__decorateClass([r()],SlSelect.prototype,"hasFocus",2),__decorateClass([r()],SlSelect.prototype,"displayLabel",2),__decorateClass([r()],SlSelect.prototype,"currentOption",2),__decorateClass([r()],SlSelect.prototype,"selectedOptions",2),__decorateClass([n()],SlSelect.prototype,"name",2),__decorateClass([n({converter:{fromAttribute:e=>e.split(" "),toAttribute:e=>e.join(" ")}})],SlSelect.prototype,"value",2),__decorateClass([defaultValue()],SlSelect.prototype,"defaultValue",2),__decorateClass([n({reflect:!0})],SlSelect.prototype,"size",2),__decorateClass([n()],SlSelect.prototype,"placeholder",2),__decorateClass([n({type:Boolean,reflect:!0})],SlSelect.prototype,"multiple",2),__decorateClass([n({attribute:"max-options-visible",type:Number})],SlSelect.prototype,"maxOptionsVisible",2),__decorateClass([n({type:Boolean,reflect:!0})],SlSelect.prototype,"disabled",2),__decorateClass([n({type:Boolean})],SlSelect.prototype,"clearable",2),__decorateClass([n({type:Boolean,reflect:!0})],SlSelect.prototype,"open",2),__decorateClass([n({type:Boolean})],SlSelect.prototype,"hoist",2),__decorateClass([n({type:Boolean,reflect:!0})],SlSelect.prototype,"filled",2),__decorateClass([n({type:Boolean,reflect:!0})],SlSelect.prototype,"pill",2),__decorateClass([n()],SlSelect.prototype,"label",2),__decorateClass([n({reflect:!0})],SlSelect.prototype,"placement",2),__decorateClass([n({attribute:"help-text"})],SlSelect.prototype,"helpText",2),__decorateClass([n({reflect:!0})],SlSelect.prototype,"form",2),__decorateClass([n({type:Boolean,reflect:!0})],SlSelect.prototype,"required",2),__decorateClass([n()],SlSelect.prototype,"getTag",2),__decorateClass([watch("disabled",{waitUntilFirstUpdate:!0})],SlSelect.prototype,"handleDisabledChange",1),__decorateClass([watch("value",{waitUntilFirstUpdate:!0})],SlSelect.prototype,"handleValueChange",1),__decorateClass([watch("open",{waitUntilFirstUpdate:!0})],SlSelect.prototype,"handleOpenChange",1),setDefaultAnimation("select.show",{keyframes:[{opacity:0,scale:.9},{opacity:1,scale:1}],options:{duration:100,easing:"ease"}}),setDefaultAnimation("select.hide",{keyframes:[{opacity:1,scale:1},{opacity:0,scale:.9}],options:{duration:100,easing:"ease"}});export{SlSelect};
//# sourceMappingURL=/sm/5e06b82e4eb95eadad87cdce3b3934e3a291edd3ae01b7bead988d10eb2d7a9a.map