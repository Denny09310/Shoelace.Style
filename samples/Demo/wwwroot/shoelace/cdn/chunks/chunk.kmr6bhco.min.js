/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@shoelace-style/shoelace@2.17.1/cdn/chunks/chunk.KMR6BHCO.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{tree_styles_default}from"./chunk.CJB5WKGN.js";import{SlTreeItem}from"./chunk.MKJDSUNA.js";import{clamp}from"./chunk.HF7GESMZ.js";import{watch}from"./chunk.SJGTYGCD.js";import{component_styles_default}from"./chunk.K23QWHWK.js";import{ShoelaceElement,e,n}from"./chunk.UQRBALDC.js";import{x}from"./chunk.CXZZ2LVK.js";import{__decorateClass}from"./chunk.625AWUY7.js";function syncCheckboxes(e,t=!1){function s(e){const t=e.getChildrenItems({includeDisabled:!1});if(t.length){const s=t.every((e=>e.selected)),l=t.every((e=>!e.selected&&!e.indeterminate));e.selected=s,e.indeterminate=!s&&!l}}!function e(l){for(const s of l.getChildrenItems())s.selected=t?l.selected||s.selected:!s.disabled&&l.selected,e(s);t&&s(l)}(e),function e(t){const l=t.parentElement;SlTreeItem.isTreeItem(l)&&(s(l),e(l))}(e)}var SlTree=class extends ShoelaceElement{constructor(){super(),this.selection="single",this.clickTarget=null,this.initTreeItem=e=>{e.selectable="multiple"===this.selection,["expand","collapse"].filter((e=>!!this.querySelector(`[slot="${e}-icon"]`))).forEach((t=>{const s=e.querySelector(`[slot="${t}-icon"]`),l=this.getExpandButtonIcon(t);l&&(null===s?e.append(l):s.hasAttribute("data-default")&&s.replaceWith(l))}))},this.handleTreeChanged=e=>{for(const t of e){const e=[...t.addedNodes].filter(SlTreeItem.isTreeItem),s=[...t.removedNodes].filter(SlTreeItem.isTreeItem);e.forEach(this.initTreeItem),this.lastFocusedItem&&s.includes(this.lastFocusedItem)&&(this.lastFocusedItem=null)}},this.handleFocusOut=e=>{const t=e.relatedTarget;t&&this.contains(t)||(this.tabIndex=0)},this.handleFocusIn=e=>{const t=e.target;e.target===this&&this.focusItem(this.lastFocusedItem||this.getAllTreeItems()[0]),SlTreeItem.isTreeItem(t)&&!t.disabled&&(this.lastFocusedItem&&(this.lastFocusedItem.tabIndex=-1),this.lastFocusedItem=t,this.tabIndex=-1,t.tabIndex=0)},this.addEventListener("focusin",this.handleFocusIn),this.addEventListener("focusout",this.handleFocusOut),this.addEventListener("sl-lazy-change",this.handleSlotChange)}async connectedCallback(){super.connectedCallback(),this.setAttribute("role","tree"),this.setAttribute("tabindex","0"),await this.updateComplete,this.mutationObserver=new MutationObserver(this.handleTreeChanged),this.mutationObserver.observe(this,{childList:!0,subtree:!0})}disconnectedCallback(){var e;super.disconnectedCallback(),null==(e=this.mutationObserver)||e.disconnect()}getExpandButtonIcon(e){const t=("expand"===e?this.expandedIconSlot:this.collapsedIconSlot).assignedElements({flatten:!0})[0];if(t){const s=t.cloneNode(!0);return[s,...s.querySelectorAll("[id]")].forEach((e=>e.removeAttribute("id"))),s.setAttribute("data-default",""),s.slot=`${e}-icon`,s}return null}selectItem(e){const t=[...this.selectedItems];if("multiple"===this.selection)e.selected=!e.selected,e.lazy&&(e.expanded=!0),syncCheckboxes(e);else if("single"===this.selection||e.isLeaf){const t=this.getAllTreeItems();for(const s of t)s.selected=s===e}else"leaf"===this.selection&&(e.expanded=!e.expanded);const s=this.selectedItems;(t.length!==s.length||s.some((e=>!t.includes(e))))&&Promise.all(s.map((e=>e.updateComplete))).then((()=>{this.emit("sl-selection-change",{detail:{selection:s}})}))}getAllTreeItems(){return[...this.querySelectorAll("sl-tree-item")]}focusItem(e){null==e||e.focus()}handleKeyDown(e){if(!["ArrowDown","ArrowUp","ArrowRight","ArrowLeft","Home","End","Enter"," "].includes(e.key))return;if(e.composedPath().some((e=>{var t;return["input","textarea"].includes(null==(t=null==e?void 0:e.tagName)?void 0:t.toLowerCase())})))return;const t=this.getFocusableItems(),s=this.matches(":dir(ltr)"),l=this.matches(":dir(rtl)");if(t.length>0){e.preventDefault();const n=t.findIndex((e=>e.matches(":focus"))),o=t[n],i=e=>{const s=t[clamp(e,0,t.length-1)];this.focusItem(s)},a=e=>{o.expanded=e};"ArrowDown"===e.key?i(n+1):"ArrowUp"===e.key?i(n-1):s&&"ArrowRight"===e.key||l&&"ArrowLeft"===e.key?!o||o.disabled||o.expanded||o.isLeaf&&!o.lazy?i(n+1):a(!0):s&&"ArrowLeft"===e.key||l&&"ArrowRight"===e.key?!o||o.disabled||o.isLeaf||!o.expanded?i(n-1):a(!1):"Home"===e.key?i(0):"End"===e.key?i(t.length-1):"Enter"!==e.key&&" "!==e.key||o.disabled||this.selectItem(o)}}handleClick(e){const t=e.target,s=t.closest("sl-tree-item"),l=e.composedPath().some((e=>{var t;return null==(t=null==e?void 0:e.classList)?void 0:t.contains("tree-item__expand-button")}));s&&!s.disabled&&t===this.clickTarget&&(l?s.expanded=!s.expanded:this.selectItem(s))}handleMouseDown(e){this.clickTarget=e.target}handleSlotChange(){this.getAllTreeItems().forEach(this.initTreeItem)}async handleSelectionChange(){const e="multiple"===this.selection,t=this.getAllTreeItems();this.setAttribute("aria-multiselectable",e?"true":"false");for(const s of t)s.selectable=e;e&&(await this.updateComplete,[...this.querySelectorAll(":scope > sl-tree-item")].forEach((e=>syncCheckboxes(e,!0))))}get selectedItems(){return this.getAllTreeItems().filter((e=>e.selected))}getFocusableItems(){const e=this.getAllTreeItems(),t=new Set;return e.filter((e=>{var s;if(e.disabled)return!1;const l=null==(s=e.parentElement)?void 0:s.closest("[role=treeitem]");return l&&(!l.expanded||l.loading||t.has(l))&&t.add(e),!t.has(e)}))}render(){return x`
      <div
        part="base"
        class="tree"
        @click=${this.handleClick}
        @keydown=${this.handleKeyDown}
        @mousedown=${this.handleMouseDown}
      >
        <slot @slotchange=${this.handleSlotChange}></slot>
        <span hidden aria-hidden="true"><slot name="expand-icon"></slot></span>
        <span hidden aria-hidden="true"><slot name="collapse-icon"></slot></span>
      </div>
    `}};SlTree.styles=[component_styles_default,tree_styles_default],__decorateClass([e("slot:not([name])")],SlTree.prototype,"defaultSlot",2),__decorateClass([e("slot[name=expand-icon]")],SlTree.prototype,"expandedIconSlot",2),__decorateClass([e("slot[name=collapse-icon]")],SlTree.prototype,"collapsedIconSlot",2),__decorateClass([n()],SlTree.prototype,"selection",2),__decorateClass([watch("selection")],SlTree.prototype,"handleSelectionChange",1);export{SlTree};
//# sourceMappingURL=/sm/6d8bc263667c73388388e487dd76eb146afb14018060073d7ab77727299bbdfd.map