/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@shoelace-style/shoelace@2.17.1/cdn/chunks/chunk.GJZ2XQYI.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{radio_group_styles_default}from"./chunk.ZDBZWNPG.js";import{form_control_styles_default}from"./chunk.2VV6AF6A.js";import{SlButtonGroup}from"./chunk.YAEK7MSM.js";import{FormControlController,customErrorValidityState,validValidityState,valueMissingValidityState}from"./chunk.37HAGFEA.js";import{HasSlotController}from"./chunk.NYIIDP5N.js";import{e}from"./chunk.UZVKBFXH.js";import{watch}from"./chunk.SJGTYGCD.js";import{component_styles_default}from"./chunk.K23QWHWK.js";import{ShoelaceElement,e as e2,n,r}from"./chunk.UQRBALDC.js";import{x}from"./chunk.CXZZ2LVK.js";import{__decorateClass}from"./chunk.625AWUY7.js";var SlRadioGroup=class extends ShoelaceElement{constructor(){super(...arguments),this.formControlController=new FormControlController(this),this.hasSlotController=new HasSlotController(this,"help-text","label"),this.customValidityMessage="",this.hasButtonGroup=!1,this.errorMessage="",this.defaultValue="",this.label="",this.helpText="",this.name="option",this.value="",this.size="medium",this.form="",this.required=!1}get validity(){const t=this.required&&!this.value;return""!==this.customValidityMessage?customErrorValidityState:t?valueMissingValidityState:validValidityState}get validationMessage(){const t=this.required&&!this.value;return""!==this.customValidityMessage?this.customValidityMessage:t?this.validationInput.validationMessage:""}connectedCallback(){super.connectedCallback(),this.defaultValue=this.value}firstUpdated(){this.formControlController.updateValidity()}getAllRadios(){return[...this.querySelectorAll("sl-radio, sl-radio-button")]}handleRadioClick(t){const e=t.target.closest("sl-radio, sl-radio-button"),o=this.getAllRadios(),l=this.value;e&&!e.disabled&&(this.value=e.value,o.forEach((t=>t.checked=t===e)),this.value!==l&&(this.emit("sl-change"),this.emit("sl-input")))}handleKeyDown(t){var e;if(!["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"," "].includes(t.key))return;const o=this.getAllRadios().filter((t=>!t.disabled)),l=null!=(e=o.find((t=>t.checked)))?e:o[0],i=" "===t.key?0:["ArrowUp","ArrowLeft"].includes(t.key)?-1:1,s=this.value;let a=o.indexOf(l)+i;a<0&&(a=o.length-1),a>o.length-1&&(a=0),this.getAllRadios().forEach((t=>{t.checked=!1,this.hasButtonGroup||t.setAttribute("tabindex","-1")})),this.value=o[a].value,o[a].checked=!0,this.hasButtonGroup?o[a].shadowRoot.querySelector("button").focus():(o[a].setAttribute("tabindex","0"),o[a].focus()),this.value!==s&&(this.emit("sl-change"),this.emit("sl-input")),t.preventDefault()}handleLabelClick(){const t=this.getAllRadios(),e=t.find((t=>t.checked))||t[0];e&&e.focus()}handleInvalid(t){this.formControlController.setValidity(!1),this.formControlController.emitInvalidEvent(t)}async syncRadioElements(){var t,e;const o=this.getAllRadios();if(await Promise.all(o.map((async t=>{await t.updateComplete,t.checked=t.value===this.value,t.size=this.size}))),this.hasButtonGroup=o.some((t=>"sl-radio-button"===t.tagName.toLowerCase())),o.length>0&&!o.some((t=>t.checked)))if(this.hasButtonGroup){const e=null==(t=o[0].shadowRoot)?void 0:t.querySelector("button");e&&e.setAttribute("tabindex","0")}else o[0].setAttribute("tabindex","0");if(this.hasButtonGroup){const t=null==(e=this.shadowRoot)?void 0:e.querySelector("sl-button-group");t&&(t.disableRole=!0)}}syncRadios(){customElements.get("sl-radio")&&customElements.get("sl-radio-button")?this.syncRadioElements():(customElements.get("sl-radio")?this.syncRadioElements():customElements.whenDefined("sl-radio").then((()=>this.syncRadios())),customElements.get("sl-radio-button")?this.syncRadioElements():customElements.whenDefined("sl-radio-button").then((()=>this.syncRadios())))}updateCheckedRadio(){this.getAllRadios().forEach((t=>t.checked=t.value===this.value)),this.formControlController.setValidity(this.validity.valid)}handleSizeChange(){this.syncRadios()}handleValueChange(){this.hasUpdated&&this.updateCheckedRadio()}checkValidity(){const t=this.required&&!this.value,e=""!==this.customValidityMessage;return!t&&!e||(this.formControlController.emitInvalidEvent(),!1)}getForm(){return this.formControlController.getForm()}reportValidity(){const t=this.validity.valid;return this.errorMessage=this.customValidityMessage||t?"":this.validationInput.validationMessage,this.formControlController.setValidity(t),this.validationInput.hidden=!0,clearTimeout(this.validationTimeout),t||(this.validationInput.hidden=!1,this.validationInput.reportValidity(),this.validationTimeout=setTimeout((()=>this.validationInput.hidden=!0),1e4)),t}setCustomValidity(t=""){this.customValidityMessage=t,this.errorMessage=t,this.validationInput.setCustomValidity(t),this.formControlController.updateValidity()}render(){const t=this.hasSlotController.test("label"),o=this.hasSlotController.test("help-text"),l=!!this.label||!!t,i=!!this.helpText||!!o,s=x`
      <slot @slotchange=${this.syncRadios} @click=${this.handleRadioClick} @keydown=${this.handleKeyDown}></slot>
    `;return x`
      <fieldset
        part="form-control"
        class=${e({"form-control":!0,"form-control--small":"small"===this.size,"form-control--medium":"medium"===this.size,"form-control--large":"large"===this.size,"form-control--radio-group":!0,"form-control--has-label":l,"form-control--has-help-text":i})}
        role="radiogroup"
        aria-labelledby="label"
        aria-describedby="help-text"
        aria-errormessage="error-message"
      >
        <label
          part="form-control-label"
          id="label"
          class="form-control__label"
          aria-hidden=${l?"false":"true"}
          @click=${this.handleLabelClick}
        >
          <slot name="label">${this.label}</slot>
        </label>

        <div part="form-control-input" class="form-control-input">
          <div class="visually-hidden">
            <div id="error-message" aria-live="assertive">${this.errorMessage}</div>
            <label class="radio-group__validation">
              <input
                type="text"
                class="radio-group__validation-input"
                ?required=${this.required}
                tabindex="-1"
                hidden
                @invalid=${this.handleInvalid}
              />
            </label>
          </div>

          ${this.hasButtonGroup?x`
                <sl-button-group part="button-group" exportparts="base:button-group__base" role="presentation">
                  ${s}
                </sl-button-group>
              `:s}
        </div>

        <div
          part="form-control-help-text"
          id="help-text"
          class="form-control__help-text"
          aria-hidden=${i?"false":"true"}
        >
          <slot name="help-text">${this.helpText}</slot>
        </div>
      </fieldset>
    `}};SlRadioGroup.styles=[component_styles_default,form_control_styles_default,radio_group_styles_default],SlRadioGroup.dependencies={"sl-button-group":SlButtonGroup},__decorateClass([e2("slot:not([name])")],SlRadioGroup.prototype,"defaultSlot",2),__decorateClass([e2(".radio-group__validation-input")],SlRadioGroup.prototype,"validationInput",2),__decorateClass([r()],SlRadioGroup.prototype,"hasButtonGroup",2),__decorateClass([r()],SlRadioGroup.prototype,"errorMessage",2),__decorateClass([r()],SlRadioGroup.prototype,"defaultValue",2),__decorateClass([n()],SlRadioGroup.prototype,"label",2),__decorateClass([n({attribute:"help-text"})],SlRadioGroup.prototype,"helpText",2),__decorateClass([n()],SlRadioGroup.prototype,"name",2),__decorateClass([n({reflect:!0})],SlRadioGroup.prototype,"value",2),__decorateClass([n({reflect:!0})],SlRadioGroup.prototype,"size",2),__decorateClass([n({reflect:!0})],SlRadioGroup.prototype,"form",2),__decorateClass([n({type:Boolean,reflect:!0})],SlRadioGroup.prototype,"required",2),__decorateClass([watch("size",{waitUntilFirstUpdate:!0})],SlRadioGroup.prototype,"handleSizeChange",1),__decorateClass([watch("value")],SlRadioGroup.prototype,"handleValueChange",1);export{SlRadioGroup};
//# sourceMappingURL=/sm/a40ec5c7ee3ac6516a8cae68d6322f2845483f149deafe31702637f7aab00030.map