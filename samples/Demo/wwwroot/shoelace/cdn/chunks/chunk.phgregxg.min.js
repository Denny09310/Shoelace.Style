/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@shoelace-style/shoelace@2.17.1/cdn/chunks/chunk.PHGREGXG.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Modal}from"./chunk.CUKKX6LO.js";import{lockBodyScrolling,unlockBodyScrolling}from"./chunk.RWUUFNUL.js";import{dialog_styles_default}from"./chunk.RYFK2CD3.js";import{SlIconButton}from"./chunk.LC52D3NF.js";import{getAnimation,setDefaultAnimation}from"./chunk.EJDHS3MU.js";import{waitForEvent}from"./chunk.B4BZKR24.js";import{animateTo,stopAnimations}from"./chunk.RV6ECJES.js";import{o}from"./chunk.2URMUHDY.js";import{HasSlotController}from"./chunk.NYIIDP5N.js";import{LocalizeController}from"./chunk.NH3SRVOC.js";import{e}from"./chunk.UZVKBFXH.js";import{watch}from"./chunk.SJGTYGCD.js";import{component_styles_default}from"./chunk.K23QWHWK.js";import{ShoelaceElement,e as e2,n}from"./chunk.UQRBALDC.js";import{x}from"./chunk.CXZZ2LVK.js";import{__decorateClass}from"./chunk.625AWUY7.js";var SlDialog=class extends ShoelaceElement{constructor(){super(...arguments),this.hasSlotController=new HasSlotController(this,"footer"),this.localize=new LocalizeController(this),this.modal=new Modal(this),this.open=!1,this.label="",this.noHeader=!1,this.handleDocumentKeyDown=e=>{"Escape"===e.key&&this.modal.isActive()&&this.open&&(e.stopPropagation(),this.requestClose("keyboard"))}}firstUpdated(){this.dialog.hidden=!this.open,this.open&&(this.addOpenListeners(),this.modal.activate(),lockBodyScrolling(this))}disconnectedCallback(){var e;super.disconnectedCallback(),this.modal.deactivate(),unlockBodyScrolling(this),null==(e=this.closeWatcher)||e.destroy()}requestClose(e){if(this.emit("sl-request-close",{cancelable:!0,detail:{source:e}}).defaultPrevented){const e=getAnimation(this,"dialog.denyClose",{dir:this.localize.dir()});animateTo(this.panel,e.keyframes,e.options)}else this.hide()}addOpenListeners(){var e;"CloseWatcher"in window?(null==(e=this.closeWatcher)||e.destroy(),this.closeWatcher=new CloseWatcher,this.closeWatcher.onclose=()=>this.requestClose("keyboard")):document.addEventListener("keydown",this.handleDocumentKeyDown)}removeOpenListeners(){var e;null==(e=this.closeWatcher)||e.destroy(),document.removeEventListener("keydown",this.handleDocumentKeyDown)}async handleOpenChange(){if(this.open){this.emit("sl-show"),this.addOpenListeners(),this.originalTrigger=document.activeElement,this.modal.activate(),lockBodyScrolling(this);const e=this.querySelector("[autofocus]");e&&e.removeAttribute("autofocus"),await Promise.all([stopAnimations(this.dialog),stopAnimations(this.overlay)]),this.dialog.hidden=!1,requestAnimationFrame((()=>{this.emit("sl-initial-focus",{cancelable:!0}).defaultPrevented||(e?e.focus({preventScroll:!0}):this.panel.focus({preventScroll:!0})),e&&e.setAttribute("autofocus","")}));const t=getAnimation(this,"dialog.show",{dir:this.localize.dir()}),o=getAnimation(this,"dialog.overlay.show",{dir:this.localize.dir()});await Promise.all([animateTo(this.panel,t.keyframes,t.options),animateTo(this.overlay,o.keyframes,o.options)]),this.emit("sl-after-show")}else{this.emit("sl-hide"),this.removeOpenListeners(),this.modal.deactivate(),await Promise.all([stopAnimations(this.dialog),stopAnimations(this.overlay)]);const e=getAnimation(this,"dialog.hide",{dir:this.localize.dir()}),t=getAnimation(this,"dialog.overlay.hide",{dir:this.localize.dir()});await Promise.all([animateTo(this.overlay,t.keyframes,t.options).then((()=>{this.overlay.hidden=!0})),animateTo(this.panel,e.keyframes,e.options).then((()=>{this.panel.hidden=!0}))]),this.dialog.hidden=!0,this.overlay.hidden=!1,this.panel.hidden=!1,unlockBodyScrolling(this);const o=this.originalTrigger;"function"==typeof(null==o?void 0:o.focus)&&setTimeout((()=>o.focus())),this.emit("sl-after-hide")}}async show(){if(!this.open)return this.open=!0,waitForEvent(this,"sl-after-show")}async hide(){if(this.open)return this.open=!1,waitForEvent(this,"sl-after-hide")}render(){return x`
      <div
        part="base"
        class=${e({dialog:!0,"dialog--open":this.open,"dialog--has-footer":this.hasSlotController.test("footer")})}
      >
        <div part="overlay" class="dialog__overlay" @click=${()=>this.requestClose("overlay")} tabindex="-1"></div>

        <div
          part="panel"
          class="dialog__panel"
          role="dialog"
          aria-modal="true"
          aria-hidden=${this.open?"false":"true"}
          aria-label=${o(this.noHeader?this.label:void 0)}
          aria-labelledby=${o(this.noHeader?void 0:"title")}
          tabindex="-1"
        >
          ${this.noHeader?"":x`
                <header part="header" class="dialog__header">
                  <h2 part="title" class="dialog__title" id="title">
                    <slot name="label"> ${this.label.length>0?this.label:String.fromCharCode(65279)} </slot>
                  </h2>
                  <div part="header-actions" class="dialog__header-actions">
                    <slot name="header-actions"></slot>
                    <sl-icon-button
                      part="close-button"
                      exportparts="base:close-button__base"
                      class="dialog__close"
                      name="x-lg"
                      label=${this.localize.term("close")}
                      library="system"
                      @click="${()=>this.requestClose("close-button")}"
                    ></sl-icon-button>
                  </div>
                </header>
              `}
          ${""}
          <div part="body" class="dialog__body" tabindex="-1"><slot></slot></div>

          <footer part="footer" class="dialog__footer">
            <slot name="footer"></slot>
          </footer>
        </div>
      </div>
    `}};SlDialog.styles=[component_styles_default,dialog_styles_default],SlDialog.dependencies={"sl-icon-button":SlIconButton},__decorateClass([e2(".dialog")],SlDialog.prototype,"dialog",2),__decorateClass([e2(".dialog__panel")],SlDialog.prototype,"panel",2),__decorateClass([e2(".dialog__overlay")],SlDialog.prototype,"overlay",2),__decorateClass([n({type:Boolean,reflect:!0})],SlDialog.prototype,"open",2),__decorateClass([n({reflect:!0})],SlDialog.prototype,"label",2),__decorateClass([n({attribute:"no-header",type:Boolean,reflect:!0})],SlDialog.prototype,"noHeader",2),__decorateClass([watch("open",{waitUntilFirstUpdate:!0})],SlDialog.prototype,"handleOpenChange",1),setDefaultAnimation("dialog.show",{keyframes:[{opacity:0,scale:.8},{opacity:1,scale:1}],options:{duration:250,easing:"ease"}}),setDefaultAnimation("dialog.hide",{keyframes:[{opacity:1,scale:1},{opacity:0,scale:.8}],options:{duration:250,easing:"ease"}}),setDefaultAnimation("dialog.denyClose",{keyframes:[{scale:1},{scale:1.02},{scale:1}],options:{duration:250}}),setDefaultAnimation("dialog.overlay.show",{keyframes:[{opacity:0},{opacity:1}],options:{duration:250}}),setDefaultAnimation("dialog.overlay.hide",{keyframes:[{opacity:1},{opacity:0}],options:{duration:250}});export{SlDialog};
//# sourceMappingURL=/sm/36384b25064ee7ee28a3699687226eb81033ee10dadac474a192e3e52ddce389.map